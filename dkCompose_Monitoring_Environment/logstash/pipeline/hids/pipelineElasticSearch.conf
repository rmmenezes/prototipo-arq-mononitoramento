input {
    # Endereço de entrada
    pipeline { address => hidsElasticsearch } 
}

filter {   
    # Id
    if [alert][id]{
        mutate {remove_field => ["[alert][id]"]}
    }

    # Timestamp Field
    if [alert][timestamp]{
      mutate {add_field => {"timestamp" => "%{[alert][timestamp]}"}}
      mutate {remove_field => ["[alert][timestamp]"]}
      mutate {remove_field => ["[alert][TimeStamp]"]}
    }

    # Host Field
    if [alert][hostname]{
      mutate {add_field => {"host" => "%{[alert][hostname]}"}}
      mutate {remove_field => ["[alert][hostname]"]}
    }

    # Agent_Name Field
    if [alert][agent_name]{
      mutate {add_field => {"agent_name" => "%{[alert][agent_name]}"}}
      mutate {remove_field => ["[alert][agent_name]"]}
    }

    # Program_Name Field
    if [alert][program_name]{
      mutate {add_field => {"program_name" => "%{[alert][program_name]}"}}
      mutate {remove_field => ["[alert][program_name]"]}
    }

    # Location_Path Field
    if [alert][location]{
      mutate {add_field => {"location_path" => "%{[alert][location]}"}}
      mutate {remove_field => ["[alert][location]"]}
    }

    # Full_Log Field
    if [alert][full_log]{
      mutate {add_field => {"full_log" => "%{[alert][full_log]}"}}
      mutate {remove_field => ["[alert][full_log]"]}
    }

    # Logfile_Path Field
    if [alert][logfile]{
      mutate {add_field => {"logfile_path" => "%{[alert][logfile]}"}}
      mutate {remove_field => ["[alert][logfile]"]}
    }  

    # Rule_Level and Rule_Comment Field
    if [alert][rule][level]{
      mutate {add_field => {"rule_level" => "%{[alert][rule][level]}"}}
      mutate {add_field => {"rule_comment" => "%{[alert][rule][comment]}"}}
      mutate {remove_field => ["[alert][rule]"]}
    }  

    # Decoder Field
    if [alert][decoder_desc][name]{
      mutate {add_field => {"decoder" => "%{[alert][decoder]}"}}
      mutate {remove_field => ["[alert][decoder]"]}
      mutate {remove_field => ["[alert][decoder_desc]"]}
    }  

    # SyscheckFile_Path Field
    if [alert][SyscheckFile]{
      mutate {add_field => {"syscheckfile_path" => "%{[alert][SyscheckFile][path]}"}}
      mutate {remove_field => ["[alert][SyscheckFile]"]}
    }  

    # Adiciona ao indice os campos que não foram anteriormente tratados ou reconhecidos por alguma regra do logstash
      ruby {
        code => "
          hash = event.get('[alert]')
          hash.each { |key,value|
                event.set(key, value)
          }
        "
      }
                  
    mutate {
      remove_field => ["alert"]
    }
}

output {
    # Apresenta a saida no log de saida do logstash (Debug)
    stdout{
    
    }

    # Armazena os dados filtrados e tratados no ElasticSearch
    elasticsearch {
      user => elastic
      password => KhC3HlYbilCB1RX3TUyr
      hosts => [ "https://elasticsearch:9200" ]
      index => "index-hids-01"
      ssl => true
      ssl_certificate_verification => false
      cacert => "/etc/logstash/certs/Logstash.crt.pem"
    }
}