input {
	tcp {
		port => 5000
    type => json
	}
}

filter {

	json{
		source => "message"
		target => "packet"
	}
	
	# if [packet][layers][tcp] {mutate {add_field => {"TCP" => "%{[packet][layers][tcp]}"}}}
	# if [packet][layers][udp] {mutate {add_field => {"UDP" => "%{[packet][layers][udp]}"}}}
	# if [packet][layers][arp]{mutate {add_field => {"ARP" => "%{[packet][layers][arp]}"}}}
	# if [packet][layers][igmp] {mutate {add_field => {"ARP" => "%{[packet][layers][igmp]}"}}}

	mutate {
		remove_field => ["packet","@version","message","host","path","tags","[packet][timestamp]","[packet][layers][frame]"]
	}
 
}
 
output {
    stdout { }
    # Armazena o fluxo de dados sem tratamento (crú) na base de conhecimento MongoDB
    mongodb {
      uri => 'mongodb://user-mongo:password123@localhost:27017/database?ssl=false'
      database => "database"
      collection => "inputs-db"
      codec => json
    }
    # Direciona o fluxo de dados para o pipelineElasticSearch responsavel pela filtragem/tratamento e indexação
    #pipeline { send_to => elasticsearch }
}