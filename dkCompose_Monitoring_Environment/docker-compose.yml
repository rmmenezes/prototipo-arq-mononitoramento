version: '3.3'

services: 

    #Constroi o container com o Logstash de Borda
    logstash-borda:
      build:
        context: .
        dockerfile: logstash-borda/Dockerfile
      container_name: logstash-borda
      deploy:
        resources:
          limits:
            memory: 700M
            cpus: '0.25'
      ports:
        - 9600:9600
        - 5000:5000 # porta de entrada para logs de rede
        - 5001:5001 # porta de entrada para logs hids
      volumes: 
        - ./logstash-borda/config/logstash.yml:/usr/share/logstash/config/logstash.yml
        - ./logstash-borda/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
        - ./logstash-borda/certs/:/usr/share/logstash/certs/
        - ./logstash-borda/pipeline/:/usr/share/logstash/pipeline/

    #Constroi o container com o Logstash de Transferencia
    logstash-trasnferencia:
      build:
        context: .
        dockerfile: logstash-trasnferencia/Dockerfile
      container_name: logstash-trasnferencia
      deploy:
        resources:
          limits:
            memory: 700M
            cpus: '0.25'
      ports:
        - 9601:9601
        - 5100:5100 # porta de entrada para possiveis ajustes no logstash via API (ainda n√£o configurado)
      volumes: 
        - ./logstash-trasnferencia/config/logstash.yml:/usr/share/logstash/config/logstash.yml
        - ./logstash-trasnferencia/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml
        - ./logstash-trasnferencia/config/jdbc-input-mongodb/:/usr/share/logstash/jdbc-input-mongodb/
        - ./logstash-trasnferencia/pipeline/:/usr/share/logstash/pipeline/
        - ./logstash-trasnferencia/certs/:/usr/share/logstash/certs/
        - ./logstash-trasnferencia/consultas/:/usr/share/logstash/consultas/


    #Constroi o container com o Mongo DB
    mongodb:
      build:
        context: .
        dockerfile: mongodb/Dockerfile
      container_name: mongodb
      deploy:
        resources:
          limits:
            memory: 1073M
            cpus: '1'
      restart: always
      ports:
        - 27017:27017
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
        MONGO_INITDB_DATABASE: admin
      volumes: 
        - ./mongodb/certs/:/certs/
        - ./mongodb/config/mongod.conf:/etc/mongod.conf
      command: ["-f", "/etc/mongod.conf"]


    # Constroi o container com o Elasticsearch
    elasticsearch:
      build:
          context: .
          dockerfile: elasticsearch/Dockerfile
      container_name: elasticsearch
      deploy:
        resources:
          limits:
            memory: 2073M
            cpus: '1'
      volumes:
          - ./shared:/usr/share/elasticsearch/shared/
          - ./elasticsearch/certs:/usr/share/elasticsearch/config/certs
          - type: bind
            source: ./elasticsearch/config/elasticsearch.yml
            target: /usr/share/elasticsearch/config/elasticsearch.yml
          - type: volume
            source: elasticsearch
            target: /usr/share/elasticsearch/data
      ports: 
          - "9200:9200"
          - "9300:9300"
      environment:
          ES_JAVA_OPTS: "-Xmx256m -Xms256m"
          ELASTIC_PASSWORD: password
      configs:
          - source: elastic_config
            target: /usr/share/elasticsearch/config/elasticsearch.yml
      depends_on:
          - mongodb
    
    # Constroi o container com o Kibana
    kibana:
      build:
        context: .
        dockerfile: kibana/Dockerfile
      container_name: kibana
      deploy:
        resources:
          limits:
            memory: 2073M
            cpus: '1'
      volumes:
          - ./kibana/certs:/usr/share/kibana/config/certs
          - ./shared:/usr/share/kibana/shared/
          - type: bind
            source: ./kibana/config/kibana.yml
            target: /usr/share/kibana/config/kibana.yml
            read_only : true
      ports: 
          - "5601:5601"
      configs:
          - source: kibana_config
            target: /usr/share/kibana/config/kibana.yml
      depends_on:
          - elasticsearch
        
configs:
    elastic_config:
        file: ./elasticsearch/config/elasticsearch.yml
    kibana_config:
        file: ./kibana/config/kibana.yml

volumes: 
  elasticsearch: